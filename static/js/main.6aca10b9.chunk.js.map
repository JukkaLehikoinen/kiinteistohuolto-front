{"version":3,"sources":["components/Services.js","components/AddCustomer.js","components/AddService.js","components/Customers.js","components/AddMechanic.js","components/Mechanics.js","components/MainPage.js","App.js","serviceWorker.js","index.js"],"names":["ServicesList","useState","services","setServices","useEffect","Fetching","fetch","headers","then","response","json","data","catch","err","console","error","columns","Header","accessor","Cell","row","showFilteredFormat","original","moment","time","format","defaultPageSize","filterable","AddCustomer","props","React","open","setOpen","name","address","ycode","person","telephone","email","customer","setCustomer","handleClose","addCusto","inputChanged","event","target","value","Button","style","margin","variant","color","onClick","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","TextField","autoFocus","onChange","label","fullWidth","DialogActions","AddService","addService","customerid","date","duration","task","comment","mechanic","service","setService","setName","setAddress","setPerson","mechanics","setMechanics","FetchMechs","mechanicid","alert","mIndex","mechId","findIndex","element","mechName","mechEmail","mechPhone","i","length","phone","mechs","map","mech","required","type","step","min","FormControl","InputLabel","NativeSelect","inputProps","disabled","CustomersList","customers","setCustomers","display","setDisplay","setCustomerid","size","showActivity","link","customerList","method","body","JSON","stringify","_","custoId","customero","Date","toISOString","log","AddMechanic","setMechanic","addMech","MechanicsList","Main","href","App","setTask","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.6aca10b9.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport ReactTable from 'react-table-v6';\r\nimport 'react-table-v6/react-table.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport moment from 'moment';\r\n\r\n\r\n\r\nexport default function ServicesList() {\r\n\r\n    const [services, setServices] = useState();\r\n    \r\n  \r\n    useEffect(() => {\r\n        Fetching();\r\n    }, []) \r\n  \r\n    const Fetching = () =>{\r\n      fetch('https://kiinteistohuolto.herokuapp.com/services', {\r\n        headers:{'Access-Control-Allow-Origin':'*'}\r\n       })\r\n        .then(response => response.json())\r\n        .then(data => setServices(data))\r\n        .catch(err => console.error(err))  \r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            Header: 'Päivä',\r\n            accessor: 'time',\r\n            Cell: row => (showFilteredFormat(row.original))\r\n        },\r\n        {\r\n            Header: 'Asiakas',\r\n            accessor: 'customer.name'\r\n        },\r\n        {\r\n            Header: 'Osoite',\r\n            accessor: 'customer.address'\r\n        },\r\n        {\r\n            Header: 'Työnkuvaus',\r\n            accessor: 'task'\r\n        },\r\n        {\r\n            Header: 'Yhteyshenkilö',\r\n            accessor: 'customer.person'\r\n        },\r\n        {\r\n            Header: 'Puhelin',\r\n            accessor: 'customer.telephone'\r\n        },\r\n        {\r\n            Header: 'Email',\r\n            accessor: 'customer.email'\r\n        },\r\n        {\r\n            Header: 'Mekaanikko',\r\n            accessor: 'mechanic.name'\r\n        }\r\n        \r\n        \r\n    ]\r\n\r\n    const showFilteredFormat =(row) =>{\r\n        return (\r\n            <div>\r\n                {moment(row.time).format(\"DD.MM.YYYY HH:mm:ss\")}\r\n            </div>\r\n        )\r\n        \r\n       }\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <h5> </h5>\r\n              <ReactTable defaultPageSize={10} filterable={true} data={services} columns={columns}/>\r\n              \r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function AddCustomer(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [customer, setCustomer] = React.useState({name:'',address:'',ycode:'',person:'', telephone:'', email:'' })\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        props.addCusto(customer);\r\n        setOpen(false);\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    const inputChanged = (event) => {\r\n        setCustomer({...customer, [event.target.name]: event.target.value});\r\n    }\r\n\r\n    return(\r\n        <div>\r\n        <h1> </h1>\r\n        <Button style={{margin:10}} variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Lisää Asiakas\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Uusi asiakas</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            value={customer.name}\r\n            onChange={inputChanged}\r\n            label=\"Nimi\"\r\n            fullWidth\r\n            \r\n          />\r\n           <TextField\r\n            margin=\"dense\"\r\n            id=\"address\"\r\n            name=\"address\"\r\n            value={customer.address}\r\n            onChange={inputChanged}\r\n            label=\"Osoite\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"ycode\"\r\n            name=\"ycode\"\r\n            value={customer.ycode}\r\n            onChange={inputChanged}\r\n            label=\"Y-tunnus\"\r\n            fullWidth\r\n          />\r\n           <TextField\r\n            margin=\"dense\"\r\n            id=\"person\"\r\n            name=\"person\"\r\n            value={customer.person}\r\n            onChange={inputChanged}\r\n            label=\"Yhteyshenkilö\"\r\n            fullWidth\r\n          />\r\n           <TextField\r\n            margin=\"dense\"\r\n            id=\"telephone\"\r\n            name=\"telephone\"\r\n            value={customer.telephone}\r\n            onChange={inputChanged}\r\n            label=\"Puhelin\"\r\n            fullWidth\r\n          />\r\n           <TextField\r\n            margin=\"dense\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            value={customer.email}\r\n            onChange={inputChanged}\r\n            label=\"Sähköposti\"\r\n            fullWidth\r\n          />\r\n          \r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCancel} color=\"primary\">\r\n            Keskeytä\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Tallenna\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { NativeSelect } from '@material-ui/core';\r\nimport moment from 'moment';\r\n\r\nexport default function AddService({addService, customerid}) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [service, setService] = React.useState({date:'',time:'',duration: 0.0,task:'',comment:'', mechanic:''})\r\n    const [name, setName] = useState();\r\n    const [address, setAddress] = useState();\r\n    const [person, setPerson] = useState();\r\n    const [mechanics, setMechanics] = useState([])\r\n    const [customer, setCustomer] = useState();\r\n   \r\n    \r\n    useEffect(() => {\r\n      Fetching();\r\n      FetchMechs();\r\n  }, []) \r\n\r\n  const Fetching = () =>{\r\n      fetch('https://kiinteistohuolto.herokuapp.com/customers/'+customerid, {\r\n        headers:{'Access-Control-Allow-Origin':'*'}\r\n       })\r\n      .then(response => response.json())\r\n      .then(data => {setName(data.name)\r\n      setAddress(data.address)\r\n      setPerson(data.person)\r\n      setCustomer(data)\r\n      })\r\n      .catch(err => console.error(err))\r\n    }\r\n  const FetchMechs = () =>{\r\n    \r\n    let time =moment().format(\"HH:mm\")\r\n    let date = moment().format(\"YYYY-MM-DD\")\r\n\r\n      fetch('https://kiinteistohuolto.herokuapp.com/mechanics', {\r\n        headers:{'Access-Control-Allow-Origin':'*'}\r\n       })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n          setMechanics(data)\r\n          setService({...service, mechanic: data[0].mechanicid, date:date, time:time})\r\n      })\r\n      .catch(err => console.error(err))  \r\n      \r\n  }\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n      //date:'',time:'',duration: '',task:'',comment:'', mechanic:''\r\n      \r\n      if (service.date==='' || service.time==='' ||service.task==='') {\r\n        alert(\"Täytä pakolliset kentät\")\r\n      } else {\r\n        \r\n        const isMechanicNumber = (element) => element === service.mechanic;\r\n        let mIndex=mechId.findIndex(isMechanicNumber);\r\n\r\n        \r\n        addService(service,customerid,customer,mechId[mIndex],mechName[mIndex],mechEmail[mIndex],mechPhone[mIndex]);\r\n        setOpen(false);\r\n      }\r\n    }\r\n  \r\n\r\n    const handleCancel = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    const inputChanged = (event) => {\r\n        setService({...service, [event.target.name]: event.target.value});\r\n    }\r\n\r\n    const durationChanged = (event) => {\r\n        if (event.target.value < 1) {\r\n          event.target.value=0;\r\n        }\r\n        setService({...service, [event.target.name]: event.target.value});\r\n        \r\n    }\r\n\r\n    \r\n\r\n    let mechName = [];\r\n    let mechId = [];\r\n    let mechEmail=[];\r\n    let mechPhone=[];\r\n\r\n    for (let i = 0; i < mechanics.length; i++) {\r\n      mechName= [...mechName, mechanics[i].name]\r\n      mechId = [...mechId, mechanics[i].mechanicid]\r\n      mechEmail = [...mechEmail, mechanics[i].email]\r\n      mechPhone = [...mechPhone, mechanics[i].phone]\r\n    \r\n    }\r\n  \r\n    const mechs = mechName.map((mech) => \r\n    <option value={mech}>{mech}</option>\r\n         )\r\n\r\n    \r\n         const mechChanged = (event) => {\r\n          for (let i = 0; i < mechanics.length; i++) {\r\n            if (event.target.value===mechanics[i].name) {\r\n              setService({...service, [event.target.name]: mechanics[i].mechanicid});\r\n            }\r\n            \r\n          }\r\n      }\r\n    \r\n   \r\n    return(\r\n        <div>\r\n        <h1> </h1>\r\n        <Button style={{margin:10}} variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Lisää uusi huoltotyö\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">uusi huoltotyö</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            required\r\n            type=\"date\"\r\n            margin=\"dense\"\r\n            id=\"date\"\r\n            name=\"date\"\r\n            value={service.date}\r\n            onChange={inputChanged}\r\n            label=\"\"\r\n            fullWidth\r\n            \r\n          />\r\n           <TextField\r\n           required\r\n            type=\"time\"\r\n            margin=\"dense\"\r\n            id=\"time\"\r\n            name=\"time\"\r\n            value={service.time}\r\n            onChange={inputChanged}\r\n            label=\"\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            required\r\n            type=\"number\"\r\n            step={0.1}\r\n            min={0.0}\r\n            margin=\"dense\"\r\n            id=\"duration\"\r\n            name=\"duration\"\r\n            value={service.duration}\r\n            onChange={durationChanged}\r\n            label=\"Työnkesto\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            required\r\n            margin=\"dense\"\r\n            id=\"task\"\r\n            name=\"task\"\r\n            value={service.task}\r\n            onChange={inputChanged}\r\n            label=\"Työnkuvaus\"\r\n            fullWidth\r\n          />\r\n           <TextField\r\n            margin=\"dense\"\r\n            id=\"comment\"\r\n            name=\"comment\"\r\n            value={service.comment}\r\n            onChange={inputChanged}\r\n            label=\"Kommentit\"\r\n            fullWidth\r\n          />\r\n          <FormControl >\r\n                        <InputLabel id=\"inputLabel\">Asentaja</InputLabel>\r\n                        <NativeSelect\r\n                            id=\"mechanic\"\r\n                            onChange={mechChanged}\r\n                            inputProps={{\r\n                                name: 'mechanic'\r\n                              }}\r\n                        >\r\n                          {mechs}\r\n                           \r\n                            </NativeSelect>\r\n                        \r\n                    </FormControl>\r\n          <TextField\r\n            disabled\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            value=''\r\n            label= {name}\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            disabled\r\n            margin=\"dense\"\r\n            id=\"address\"\r\n            name=\"address\"\r\n            value=''\r\n            label={address}\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            disabled\r\n            margin=\"dense\"\r\n            id=\"person\"\r\n            name=\"person\"\r\n            value=''\r\n            label={person}\r\n            fullWidth\r\n          />\r\n          \r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCancel} color=\"primary\">\r\n            Keskeytä\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Tallenna\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport ReactTable from 'react-table-v6';\r\nimport 'react-table-v6/react-table.css';\r\nimport AddCustomer from './AddCustomer';\r\nimport AddService from './AddService';\r\nimport Button from '@material-ui/core/Button';\r\nimport moment from 'moment';\r\n\r\nexport default function CustomersList(props) {\r\n\r\n    const [customers, setCustomers] = useState();\r\n    const [custoservice, setCustoService] = useState();\r\n    const [customer, setCustomer] = useState();\r\n    const [display, setDisplay] = useState(0);\r\n    const [customerid, setCustomerid] = useState();\r\n\r\n    const [services, setServices] = useState('');\r\n    \r\n    useEffect(() => {\r\n        Fetching();\r\n    }, []) \r\n  \r\n    const Fetching = () =>{\r\n        fetch('https://kiinteistohuolto.herokuapp.com/customers', {\r\n            headers:{'Access-Control-Allow-Origin':'*'}\r\n           })\r\n        //fetch('https://kiinteistohuolto.herokuapp.com/api/customers')\r\n        .then(response => response.json())\r\n        .then(data => setCustomers(data))\r\n        .catch(err => console.error(err))  \r\n        \r\n    }\r\n\r\n    const columns = [\r\n        \r\n        {\r\n            Header: 'Nimi',\r\n            accessor: 'name'\r\n        },\r\n        {\r\n            Header: 'Osoite',\r\n            accessor: 'address'\r\n        },\r\n        {\r\n            Header: 'y-tunnus',\r\n            accessor: 'ycode'\r\n        },\r\n        {\r\n            Header: 'Yhteyshenkilö',\r\n            accessor: 'person'\r\n        },\r\n        {\r\n            Header: 'Puhelin',\r\n            accessor: 'telephone'\r\n        },\r\n        {\r\n            Header: 'Sähköposti',\r\n            accessor: 'email'\r\n        },\r\n        {\r\n            Cell: row => (<Button size=\"small\" color=\"secondary\" onClick={() => showActivity(row.original)}>Näytä huoltotyöt</Button>)  \r\n        }\r\n               \r\n    ]\r\n\r\n    const addCusto = (customer) => {      \r\n        fetch('http://kiinteistohuolto.herokuapp.com/addcustomer', {method: 'POST',\r\n        headers:{'Content-Type':'application/json','Access-Control-Allow-Origin':'*'\r\n        }, \r\n        body:JSON.stringify(customer)        \r\n}\r\n\r\n)\r\n.then(_ => Fetching())\r\n\r\n  .catch(err => console.error(err))  \r\n}\r\n\r\nconst addService = (customer,custoId,customero,mechId,mechName,mechEmail,mechPhone) => {  \r\n\r\n    \r\n\r\n    let dateConv = new Date(customer.date + \" \" + customer.time).toISOString(); \r\n    let service = {time: dateConv, duration: customer.duration, task: customer.task, comment: customer.comment,\r\n        customer:{customerid:customero.customerid,name:customero.name,address:customero.address, \r\n        ycode:customero.ycode,person:customero.person,telephone:customero.telephone,email:customero.email},\r\n        mechanic:{mechanicid:mechId, name:mechName, email:mechEmail,phone:mechPhone}}\r\n    console.log(service)\r\n    fetch('http://kiinteistohuolto.herokuapp.com/addservice', {method: 'POST',\r\n    headers:{'Content-Type':'application/json','Access-Control-Allow-Origin':'*'\r\n    }, \r\n    body:JSON.stringify(service)        \r\n}\r\n\r\n)\r\n.then(_ => showActivity(customero))\r\n\r\n.catch(err => console.error(err))  \r\n}\r\n\r\n\r\n\r\nconst showActivity = (link) => {\r\n    \r\n     setCustomerid(link.customerid)\r\n   /* console.log(link._links.services.href) */\r\n     fetch('https://kiinteistohuolto.herokuapp.com/customers/'+link.customerid\r\n     , {\r\n        headers:{'Access-Control-Allow-Origin':'*'}\r\n       })\r\n    //fetch(props.customer.links[2].href)\r\n    .then(response => response.json())\r\n    .then(data => setCustomer(data))\r\n    .catch(err => console.error(err))\r\n\r\n\r\n    \r\n    \r\n        fetch('https://kiinteistohuolto.herokuapp.com/services/', {\r\n            headers:{'Access-Control-Allow-Origin':'*'}\r\n           })\r\n        .then(response => response.json())\r\n        .then(data=> setServices(data))\r\n        .catch(err => console.error(err))\r\n\r\n    \r\n    \r\n   /*  fetch('https://kiinteistohuolto.herokuapp.com/api/customers/'+link.customerid+'/services', {\r\n        headers:{'Access-Control-Allow-Origin':'*'}\r\n       })\r\n    .then(response => response.json())\r\n    .then(data =>  setCustoService(data._embedded.services)\r\n     )\r\n    .catch(err => console.error(err)) */\r\n    \r\n    setDisplay(1); \r\n}\r\nlet customerList = [];\r\n    if (services !== '') {\r\nfor (let i = 0; i < services.length; i++) {\r\n    if (services[i].customer.customerid===customerid) {\r\n        customerList = [...customerList,services[i]]\r\n        \r\n    }\r\n}\r\n}\r\n\r\nconst showFilteredFormat =(row) =>{\r\n    return (\r\n        <div>\r\n            {moment(row.time).format(\"DD.MM.YYYY HH:mm:ss\")}\r\n        </div>\r\n    )\r\n    \r\n   }\r\n\r\n  \r\n\r\nif (display !==1) {\r\n    return (\r\n        <div>\r\n            <AddCustomer addCusto={addCusto}/>\r\n            <ReactTable defaultPageSize={10} filterable={true} data={customers} columns={columns}/>  \r\n        </div>\r\n    )\r\n    } else {\r\n        \r\n        const columns = [\r\n            \r\n            {\r\n                Header: 'Päivä',\r\n                accessor: 'time',\r\n                Cell: row => (showFilteredFormat(row.original))\r\n            },\r\n           \r\n            {\r\n                Header: 'Työnkuvaus',\r\n                accessor: 'task'\r\n            },\r\n            {\r\n                Header: 'Kesto',\r\n                accessor: 'duration'\r\n            },\r\n            {\r\n                Header: 'Kommentit',\r\n                accessor: 'comment'\r\n            }\r\n        ]\r\n        \r\n        \r\n        \r\n        return (\r\n            <div>\r\n                <AddService customerid={customerid} addService={addService}/>\r\n                {/* <ReactTable defaultPageSize={10} filterable={true} data={custoservice} columns={columns}/> */}\r\n                <ReactTable defaultPageSize={10} filterable={true} data={customerList} columns={columns}/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function AddMechanic(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [mechanic, setMechanic] = React.useState({name:'', email:'', phone:''})\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        props.addMech(mechanic);\r\n        setOpen(false);\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    const inputChanged = (event) => {\r\n        setMechanic({...mechanic, [event.target.name]: event.target.value});\r\n    }\r\n\r\n    return(\r\n        <div>\r\n        <h1> </h1>\r\n        <Button style={{margin:10}} variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Lisää Asenataja\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Uusi asentaja</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            value={mechanic.name}\r\n            onChange={inputChanged}\r\n            label=\"Nimi\"\r\n            fullWidth\r\n          />\r\n           <TextField\r\n            margin=\"dense\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            value={mechanic.email}\r\n            onChange={inputChanged}\r\n            label=\"Sähköposti\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"phone\"\r\n            name=\"phone\"\r\n            value={mechanic.phone}\r\n            onChange={inputChanged}\r\n            label=\"Puhelin\"\r\n            fullWidth\r\n          />\r\n          \r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCancel} color=\"primary\">\r\n            Keskeytä\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Tallenna\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport ReactTable from 'react-table-v6';\r\nimport 'react-table-v6/react-table.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddMechanic from './AddMechanic';\r\n\r\n\r\nexport default function MechanicsList() {\r\n\r\n    const [mechanics, setMechanics] = useState();\r\n    \r\n  \r\n    useEffect(() => {\r\n        Fetching();\r\n    }, []) \r\n  \r\n    const Fetching = () =>{\r\n      fetch('https://kiinteistohuolto.herokuapp.com/mechanics', {\r\n        headers:{'Access-Control-Allow-Origin':'*'}\r\n       })\r\n        .then(response => response.json())\r\n        .then(data => setMechanics(data))\r\n        .catch(err => console.error(err))  \r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            Header: 'Nimi',\r\n            accessor: 'name'\r\n        },\r\n        {\r\n            Header: 'puhelin',\r\n            accessor: 'phone'\r\n        },\r\n        {\r\n            Header: 'sähköposti',\r\n            accessor: 'email'\r\n        }\r\n        \r\n    ]\r\n\r\n\r\n    const addMech = (mechanic) => {\r\n\r\n        \r\n            \r\n            fetch('http://kiinteistohuolto.herokuapp.com/addmechanic', {method: 'POST',\r\n            headers:{'Content-Type':'application/json','Access-Control-Allow-Origin':'*'\r\n            }, \r\n            body:JSON.stringify(mechanic)\r\n            \r\n            \r\n    }\r\n    \r\n    )\r\n    .then(_ => Fetching())\r\n   \r\n      .catch(err => console.error(err))  \r\n    }\r\n\r\n\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <AddMechanic addMech={addMech}/>\r\n            \r\n              <ReactTable defaultPageSize={10} filterable={true} data={mechanics} columns={columns}/>\r\n              \r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\n\r\n\r\nexport default function Main() {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h4>Hei, tämä on demosivusto.<br></br>Sivustolla on käytetty API kutsuja itsetehdystä BackEndistä.\r\n            <br></br>mm osoitteesta:</h4>\r\n            <a href=\"https://kiinteistohuolto.herokuapp.com/services\" target=\"_blank\">kiinteistohuolto.herokuapp.com/services</a><br></br>\r\n            <a href=\"https://kiinteistohuolto.herokuapp.com/customers\" target=\"_blank\">kiinteistohuolto.herokuapp.com/customers</a><br></br>\r\n            <a href=\"https://kiinteistohuolto.herokuapp.com/mechanics\" target=\"_blank\">kiinteistohuolto.herokuapp.com/mechanics</a><br></br>\r\n\r\n            <h4>BackEnd on tehty H2consolella joka tyhjenee kun serveri uinahtaa.<br></br>\r\n            BackEnd on toteutettu Maven Projektina Spring boot, kielenä Java. FrontEnd tehty Reactilla</h4>\r\n        </div>\r\n    )\r\n\r\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport './App.css';\nimport Services from './components/Services';\nimport Customers from './components/Customers';\nimport Mechanics from './components/Mechanics';\nimport MainPage from './components/MainPage';\n\n\nfunction App() {\n\n  const [task, setTask] = React.useState(3);\n\n  \n  \n  const showMechanics = () => {\n    setTask(1);\n  }\n\n  const showCustomers = () => {\n    setTask(2);     \n  }\n\n  function wait(ms){\n    var start = new Date().getTime();\n    var end = start;\n    while(end < start + ms) {\n      end = new Date().getTime();\n   }\n }\n\n  const showServices = () => {\n    setTask(0);\n  }\n\n  const showInfo = () => {\n    setTask(3);\n  }\n  return (\n   \n    <div className=\"App\">\n      \n      <h1>Kiinteistöhuoltoa</h1>\n      <Button color=\"primary\" onClick={showCustomers}>Asiakkaat</Button>\n      <Button color=\"primary\" onClick={showMechanics}>Asentajat</Button>\n      <Button color=\"primary\" onClick={showServices}>Huoltotyöt</Button>\n      {task ===0 && <Services /> ||\n      task === 1 && <Mechanics /> ||\n      task === 2 && <Customers /> ||\n      task === 3 && <MainPage />\n      }\n      <br></br><Button color=\"primary\" onClick={showInfo}>Info</Button>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}