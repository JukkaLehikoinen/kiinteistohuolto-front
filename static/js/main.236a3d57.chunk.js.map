{"version":3,"sources":["components/Services.js","components/AddCustomer.js","components/AddService.js","components/Customers.js","components/AddMechanic.js","components/Mechanics.js","components/MainPage.js","App.js","serviceWorker.js","index.js"],"names":["ServicesList","useState","services","setServices","useEffect","Fetching","fetch","headers","then","response","json","data","catch","err","console","error","columns","Header","accessor","Cell","row","showFilteredFormat","original","moment","time","format","defaultPageSize","filterable","AddCustomer","props","React","open","setOpen","name","address","ycode","person","telephone","email","customer","setCustomer","handleClose","addCusto","inputChanged","event","target","value","Button","style","margin","variant","color","onClick","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","TextField","autoFocus","onChange","label","fullWidth","DialogActions","AddService","addService","customerid","date","duration","task","comment","mechanic","service","setService","setName","setAddress","setPerson","mechanics","setMechanics","FetchMechs","mechanicid","alert","mIndex","mechId","findIndex","element","mechName","mechEmail","mechPhone","i","length","phone","mechs","map","mech","required","type","step","min","firstNumber","charAt","secondNumber","substr","FormControl","InputLabel","NativeSelect","inputProps","disabled","CustomersList","customers","setCustomers","display","setDisplay","setCustomerid","size","showActivity","link","customerList","method","body","JSON","stringify","_","custoId","customero","Date","toISOString","log","AddMechanic","setMechanic","addMech","MechanicsList","Main","href","App","setTask","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.236a3d57.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport ReactTable from 'react-table-v6';\r\nimport 'react-table-v6/react-table.css';\r\nimport moment from 'moment';\r\n\r\n\r\n\r\nexport default function ServicesList() {\r\n\r\n    const [services, setServices] = useState();\r\n\r\n\r\n    useEffect(() => {\r\n        Fetching();\r\n    }, [])\r\n\r\n    const Fetching = () => {\r\n        fetch('https://kiinteistohuolto.herokuapp.com/services', {\r\n            headers: { 'Access-Control-Allow-Origin': '*' }\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => setServices(data))\r\n            .catch(err => console.error(err))\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            Header: 'Päivä',\r\n            accessor: 'time',\r\n            Cell: row => (showFilteredFormat(row.original))\r\n        },\r\n        {\r\n            Header: 'Asiakas',\r\n            accessor: 'customer.name'\r\n        },\r\n        {\r\n            Header: 'Osoite',\r\n            accessor: 'customer.address'\r\n        },\r\n        {\r\n            Header: 'Työnkuvaus',\r\n            accessor: 'task'\r\n        },\r\n        {\r\n            Header: 'Yhteyshenkilö',\r\n            accessor: 'customer.person'\r\n        },\r\n        {\r\n            Header: 'Puhelin',\r\n            accessor: 'customer.telephone'\r\n        },\r\n        {\r\n            Header: 'Email',\r\n            accessor: 'customer.email'\r\n        },\r\n        {\r\n            Header: 'Mekaanikko',\r\n            accessor: 'mechanic.name'\r\n        }\r\n\r\n\r\n    ]\r\n\r\n    const showFilteredFormat = (row) => {\r\n        return (\r\n            <div>\r\n                {moment(row.time).format(\"DD.MM.YYYY HH:mm:ss\")}\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h5> </h5>\r\n            <ReactTable defaultPageSize={10} filterable={true} data={services} columns={columns} />\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function AddCustomer(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [customer, setCustomer] = React.useState({ name: '', address: '', ycode: '', person: '', telephone: '', email: '' })\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  }\r\n\r\n  const handleClose = () => {\r\n    props.addCusto(customer);\r\n    setOpen(false);\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    setOpen(false);\r\n  }\r\n\r\n  const inputChanged = (event) => {\r\n    setCustomer({ ...customer, [event.target.name]: event.target.value });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1> </h1>\r\n      <Button style={{ margin: 10 }} variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Lisää Asiakas\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Uusi asiakas</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            value={customer.name}\r\n            onChange={inputChanged}\r\n            label=\"Nimi\"\r\n            fullWidth\r\n\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"address\"\r\n            name=\"address\"\r\n            value={customer.address}\r\n            onChange={inputChanged}\r\n            label=\"Osoite\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"ycode\"\r\n            name=\"ycode\"\r\n            value={customer.ycode}\r\n            onChange={inputChanged}\r\n            label=\"Y-tunnus\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"person\"\r\n            name=\"person\"\r\n            value={customer.person}\r\n            onChange={inputChanged}\r\n            label=\"Yhteyshenkilö\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"telephone\"\r\n            name=\"telephone\"\r\n            value={customer.telephone}\r\n            onChange={inputChanged}\r\n            label=\"Puhelin\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            value={customer.email}\r\n            onChange={inputChanged}\r\n            label=\"Sähköposti\"\r\n            fullWidth\r\n          />\r\n\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCancel} color=\"primary\">\r\n            Keskeytä\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Tallenna\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n    </div>\r\n  )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { NativeSelect } from '@material-ui/core';\r\nimport moment from 'moment';\r\n\r\nexport default function AddService({ addService, customerid }) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [service, setService] = React.useState({ date: '', time: '', duration: 0.0, task: '', comment: '', mechanic: '' })\r\n  const [name, setName] = useState();\r\n  const [address, setAddress] = useState();\r\n  const [person, setPerson] = useState();\r\n  const [mechanics, setMechanics] = useState([])\r\n  const [customer, setCustomer] = useState();\r\n\r\n\r\n  useEffect(() => {\r\n    Fetching();\r\n    FetchMechs();\r\n  }, [])\r\n\r\n  const Fetching = () => {\r\n    fetch('https://kiinteistohuolto.herokuapp.com/customers/' + customerid, {\r\n      headers: { 'Access-Control-Allow-Origin': '*' }\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setName(data.name)\r\n        setAddress(data.address)\r\n        setPerson(data.person)\r\n        setCustomer(data)\r\n      })\r\n      .catch(err => console.error(err))\r\n  }\r\n  const FetchMechs = () => {\r\n\r\n    let time = moment().format(\"HH:mm\")\r\n    let date = moment().format(\"YYYY-MM-DD\")\r\n\r\n    fetch('https://kiinteistohuolto.herokuapp.com/mechanics', {\r\n      headers: { 'Access-Control-Allow-Origin': '*' }\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setMechanics(data)\r\n        setService({ ...service, mechanic: data[0].mechanicid, date: date, time: time })\r\n      })\r\n      .catch(err => console.error(err))\r\n\r\n  }\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  }\r\n\r\n  const handleClose = () => {\r\n    //date:'',time:'',duration: '',task:'',comment:'', mechanic:''\r\n\r\n    if (service.date === '' || service.time === '' || service.task === '') {\r\n      alert(\"Täytä pakolliset kentät\")\r\n    } else {\r\n\r\n      const isMechanicNumber = (element) => element === service.mechanic;\r\n      let mIndex = mechId.findIndex(isMechanicNumber);\r\n\r\n\r\n      addService(service, customerid, customer, mechId[mIndex], mechName[mIndex], mechEmail[mIndex], mechPhone[mIndex]);\r\n      setOpen(false);\r\n    }\r\n  }\r\n\r\n\r\n  const handleCancel = () => {\r\n    setOpen(false);\r\n  }\r\n\r\n  const inputChanged = (event) => {\r\n    setService({ ...service, [event.target.name]: event.target.value });\r\n  }\r\n\r\n  const durationChanged = (event) => {\r\n    let firstNumber = event.target.value.charAt(0);\r\n    let secondNumber = event.target.value.charAt(1);\r\n    if (firstNumber === '0' && secondNumber !== '') {\r\n      event.target.value = event.target.value.substr(1);\r\n    }\r\n    if (event.target.value < 1) {\r\n      event.target.value = 0;\r\n    }\r\n    setService({ ...service, [event.target.name]: event.target.value });\r\n  }\r\n\r\n\r\n\r\n  let mechName = [];\r\n  let mechId = [];\r\n  let mechEmail = [];\r\n  let mechPhone = [];\r\n\r\n  for (let i = 0; i < mechanics.length; i++) {\r\n    mechName = [...mechName, mechanics[i].name]\r\n    mechId = [...mechId, mechanics[i].mechanicid]\r\n    mechEmail = [...mechEmail, mechanics[i].email]\r\n    mechPhone = [...mechPhone, mechanics[i].phone]\r\n\r\n  }\r\n\r\n  const mechs = mechName.map((mech) =>\r\n    <option value={mech}>{mech}</option>\r\n  )\r\n\r\n\r\n  const mechChanged = (event) => {\r\n    for (let i = 0; i < mechanics.length; i++) {\r\n      if (event.target.value === mechanics[i].name) {\r\n        setService({ ...service, [event.target.name]: mechanics[i].mechanicid });\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h1> </h1>\r\n      <Button style={{ margin: 10 }} variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Lisää uusi huoltotyö\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">uusi huoltotyö</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            required\r\n            type=\"date\"\r\n            margin=\"dense\"\r\n            id=\"date\"\r\n            name=\"date\"\r\n            value={service.date}\r\n            onChange={inputChanged}\r\n            label=\"\"\r\n            fullWidth\r\n\r\n          />\r\n          <TextField\r\n            required\r\n            type=\"time\"\r\n            margin=\"dense\"\r\n            id=\"time\"\r\n            name=\"time\"\r\n            value={service.time}\r\n            onChange={inputChanged}\r\n            label=\"\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            required\r\n            type=\"number\"\r\n            step={0.1}\r\n            min={0.0}\r\n            margin=\"dense\"\r\n            id=\"duration\"\r\n            name=\"duration\"\r\n            value={service.duration}\r\n            onChange={durationChanged}\r\n            label=\"Työnkesto\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            required\r\n            margin=\"dense\"\r\n            id=\"task\"\r\n            name=\"task\"\r\n            value={service.task}\r\n            onChange={inputChanged}\r\n            label=\"Työnkuvaus\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"comment\"\r\n            name=\"comment\"\r\n            value={service.comment}\r\n            onChange={inputChanged}\r\n            label=\"Kommentit\"\r\n            fullWidth\r\n          />\r\n          <FormControl >\r\n            <InputLabel id=\"inputLabel\">Asentaja</InputLabel>\r\n            <NativeSelect\r\n              id=\"mechanic\"\r\n              onChange={mechChanged}\r\n              inputProps={{\r\n                name: 'mechanic'\r\n              }}\r\n            >\r\n              {mechs}\r\n\r\n            </NativeSelect>\r\n\r\n          </FormControl>\r\n          <TextField\r\n            disabled\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            value=''\r\n            label={name}\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            disabled\r\n            margin=\"dense\"\r\n            id=\"address\"\r\n            name=\"address\"\r\n            value=''\r\n            label={address}\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            disabled\r\n            margin=\"dense\"\r\n            id=\"person\"\r\n            name=\"person\"\r\n            value=''\r\n            label={person}\r\n            fullWidth\r\n          />\r\n\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCancel} color=\"primary\">\r\n            Keskeytä\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Tallenna\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n    </div>\r\n  )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport ReactTable from 'react-table-v6';\r\nimport 'react-table-v6/react-table.css';\r\nimport AddCustomer from './AddCustomer';\r\nimport AddService from './AddService';\r\nimport Button from '@material-ui/core/Button';\r\nimport moment from 'moment';\r\n\r\nexport default function CustomersList(props) {\r\n\r\n    const [customers, setCustomers] = useState();\r\n    const [customer, setCustomer] = useState();\r\n    const [display, setDisplay] = useState(0);\r\n    const [customerid, setCustomerid] = useState();\r\n\r\n    const [services, setServices] = useState('');\r\n\r\n    useEffect(() => {\r\n        Fetching();\r\n    }, [])\r\n\r\n    const Fetching = () => {\r\n        fetch('https://kiinteistohuolto.herokuapp.com/customers', {\r\n            headers: { 'Access-Control-Allow-Origin': '*' }\r\n        })\r\n            //fetch('https://kiinteistohuolto.herokuapp.com/api/customers')\r\n            .then(response => response.json())\r\n            .then(data => setCustomers(data))\r\n            .catch(err => console.error(err))\r\n\r\n    }\r\n\r\n    const columns = [\r\n\r\n        {\r\n            Header: 'Nimi',\r\n            accessor: 'name'\r\n        },\r\n        {\r\n            Header: 'Osoite',\r\n            accessor: 'address'\r\n        },\r\n        {\r\n            Header: 'y-tunnus',\r\n            accessor: 'ycode'\r\n        },\r\n        {\r\n            Header: 'Yhteyshenkilö',\r\n            accessor: 'person'\r\n        },\r\n        {\r\n            Header: 'Puhelin',\r\n            accessor: 'telephone'\r\n        },\r\n        {\r\n            Header: 'Sähköposti',\r\n            accessor: 'email'\r\n        },\r\n        {\r\n            Cell: row => (<Button size=\"small\" color=\"secondary\" onClick={() => showActivity(row.original)}>Näytä huoltotyöt</Button>)\r\n        }\r\n\r\n    ]\r\n\r\n    const addCusto = (customer) => {\r\n        fetch('https://kiinteistohuolto.herokuapp.com/addcustomer', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*'\r\n            },\r\n            body: JSON.stringify(customer)\r\n        }\r\n\r\n        )\r\n            .then(_ => Fetching())\r\n            .catch(err => console.error(err))\r\n    }\r\n\r\n    const addService = (customer, custoId, customero, mechId, mechName, mechEmail, mechPhone) => {\r\n        \r\n\r\n\r\n        let dateConv = new Date(customer.date + \" \" + customer.time).toISOString();\r\n        let service = {\r\n            time: dateConv, duration: customer.duration, task: customer.task, comment: customer.comment,\r\n            customer: {\r\n                customerid: customero.customerid, name: customero.name, address: customero.address,\r\n                ycode: customero.ycode, person: customero.person, telephone: customero.telephone, email: customero.email\r\n            },\r\n            mechanic: { mechanicid: mechId, name: mechName, email: mechEmail, phone: mechPhone }\r\n        }\r\n            console.log(service)\r\n      /*   fetch('https://kiinteistohuolto.herokuapp.com/addservice', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*'\r\n            },\r\n            body: JSON.stringify(service)\r\n        }\r\n\r\n        )\r\n            .then(_ => showActivity(customero))\r\n            .catch(err => console.error(err))\r\n    } */\r\n}\r\n\r\n    const showActivity = (link) => {\r\n\r\n        setCustomerid(link.customerid)\r\n        /* console.log(link._links.services.href) */\r\n        fetch('https://kiinteistohuolto.herokuapp.com/customers/' + link.customerid\r\n            , {\r\n                headers: { 'Access-Control-Allow-Origin': '*' }\r\n            })\r\n            //fetch(props.customer.links[2].href)\r\n            .then(response => response.json())\r\n            .then(data => setCustomer(data))\r\n            .catch(err => console.error(err))\r\n\r\n        fetch('https://kiinteistohuolto.herokuapp.com/services/', {\r\n            headers: { 'Access-Control-Allow-Origin': '*' }\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => setServices(data))\r\n            .catch(err => console.error(err))\r\n\r\n        setDisplay(1);\r\n    }\r\n    let customerList = [];\r\n    if (services !== '') {\r\n        for (let i = 0; i < services.length; i++) {\r\n            if (services[i].customer.customerid === customerid) {\r\n                customerList = [...customerList, services[i]]\r\n            }\r\n        }\r\n    }\r\n\r\n    const showFilteredFormat = (row) => {\r\n        return (\r\n            <div>\r\n                {moment(row.time).format(\"DD.MM.YYYY HH:mm:ss\")}\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    if (display !== 1) {\r\n        return (\r\n            <div>\r\n                <AddCustomer addCusto={addCusto} />\r\n                <ReactTable defaultPageSize={10} filterable={true} data={customers} columns={columns} />\r\n            </div>\r\n        )\r\n    } else {\r\n        const columns = [\r\n\r\n            {\r\n                Header: 'Päivä',\r\n                accessor: 'time',\r\n                Cell: row => (showFilteredFormat(row.original))\r\n            },\r\n\r\n            {\r\n                Header: 'Työnkuvaus',\r\n                accessor: 'task'\r\n            },\r\n            {\r\n                Header: 'Kesto',\r\n                accessor: 'duration'\r\n            },\r\n            {\r\n                Header: 'Kommentit',\r\n                accessor: 'comment'\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <div>\r\n                <AddService customerid={customerid} addService={addService} />\r\n                {/* <ReactTable defaultPageSize={10} filterable={true} data={custoservice} columns={columns}/> */}\r\n                <ReactTable defaultPageSize={10} filterable={true} data={customerList} columns={columns} />\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function AddMechanic(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [mechanic, setMechanic] = React.useState({ name: '', email: '', phone: '' })\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  }\r\n\r\n  const handleClose = () => {\r\n    props.addMech(mechanic);\r\n    setOpen(false);\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    setOpen(false);\r\n  }\r\n\r\n  const inputChanged = (event) => {\r\n    setMechanic({ ...mechanic, [event.target.name]: event.target.value });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1> </h1>\r\n      <Button style={{ margin: 10 }} variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Lisää Asentaja\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Uusi asentaja</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            value={mechanic.name}\r\n            onChange={inputChanged}\r\n            label=\"Nimi\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            value={mechanic.email}\r\n            onChange={inputChanged}\r\n            label=\"Sähköposti\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"phone\"\r\n            name=\"phone\"\r\n            value={mechanic.phone}\r\n            onChange={inputChanged}\r\n            label=\"Puhelin\"\r\n            fullWidth\r\n          />\r\n\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCancel} color=\"primary\">\r\n            Keskeytä\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Tallenna\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n    </div>\r\n  )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport ReactTable from 'react-table-v6';\r\nimport 'react-table-v6/react-table.css';\r\nimport AddMechanic from './AddMechanic';\r\n\r\n\r\nexport default function MechanicsList() {\r\n\r\n    const [mechanics, setMechanics] = useState();\r\n\r\n\r\n    useEffect(() => {\r\n        Fetching();\r\n    }, [])\r\n\r\n    const Fetching = () => {\r\n        fetch('https://kiinteistohuolto.herokuapp.com/mechanics', {\r\n            headers: { 'Access-Control-Allow-Origin': '*' }\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => setMechanics(data))\r\n            .catch(err => console.error(err))\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            Header: 'Nimi',\r\n            accessor: 'name'\r\n        },\r\n        {\r\n            Header: 'puhelin',\r\n            accessor: 'phone'\r\n        },\r\n        {\r\n            Header: 'sähköposti',\r\n            accessor: 'email'\r\n        }\r\n\r\n    ]\r\n\r\n\r\n    const addMech = (mechanic) => {\r\n\r\n\r\n\r\n        fetch('https://kiinteistohuolto.herokuapp.com/addmechanic', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*'\r\n            },\r\n            body: JSON.stringify(mechanic)\r\n\r\n\r\n        }\r\n\r\n        )\r\n            .then(_ => Fetching())\r\n\r\n            .catch(err => console.error(err))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <AddMechanic addMech={addMech} />\r\n\r\n            <ReactTable defaultPageSize={10} filterable={true} data={mechanics} columns={columns} />\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\n\r\n\r\nexport default function Main() {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h4>Hei, tämä on demosivusto.<br></br>Sivustolla on käytetty API kutsuja itsetehdystä BackEndistä.\r\n            <br></br>mm osoitteesta:</h4>\r\n            <a href=\"https://kiinteistohuolto.herokuapp.com/services\" target=\"_blank\">kiinteistohuolto.herokuapp.com/services</a><br></br>\r\n            <a href=\"https://kiinteistohuolto.herokuapp.com/customers\" target=\"_blank\">kiinteistohuolto.herokuapp.com/customers</a><br></br>\r\n            <a href=\"https://kiinteistohuolto.herokuapp.com/mechanics\" target=\"_blank\">kiinteistohuolto.herokuapp.com/mechanics</a><br></br>\r\n\r\n            <h4>BackEnd on tehty H2consolella joka tyhjenee kun serveri uinahtaa.<br></br>\r\n            BackEnd on toteutettu Maven Projektina Spring boot, kielenä Java. FrontEnd tehty Reactilla</h4>\r\n        </div>\r\n    )\r\n\r\n}","import React from 'react';\nimport './App.css';\nimport Services from './components/Services';\nimport Customers from './components/Customers';\nimport Mechanics from './components/Mechanics';\nimport MainPage from './components/MainPage';\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Link from '@material-ui/core/Link';\nimport { render } from '@testing-library/react';\nimport Button from '@material-ui/core/Button';\n\n\nfunction App() {\n  const [task, setTask] = React.useState(1);\n\n  const showInfo = () => {\n    setTask(1)\n  }\n\n  const showCustomers = () => {\n    setTask(2)\n    \n  }\n  const showMechanics = () => {\n    setTask(3)\n  }\n  const showServices = () => {\n    setTask(4)\n  }\n\n  return (\n\n    <div className=\"App\">\n\n      <h1>Kiinteistöhuoltoa</h1>\n\n      <Button color=\"primary\" onClick={showInfo} >Info</Button>\n      <Button color=\"primary\" onClick={showCustomers} >Asiakkaat</Button>\n      <Button color=\"primary\" onClick={showMechanics} >Asentajat</Button>\n      <Button color=\"primary\" onClick={showServices} >Huollot</Button>\n\n      {task===1 && <MainPage /> ||\n      task===2 && <Customers /> ||\n      task===3 && <Mechanics /> ||\n      task===4 && <Services />}\n\n      {/* <Link color=\"primary\" href=\"/MainPage\" onClick={MainPage}>INFO</Link>{' '}\n      <Link color=\"primary\" href=\"/Customers\" onClick={Customers}>ASIAKKAAT</Link>{' '}\n      <Link color=\"primary\" href=\"/Mechanics\" onClick={Mechanics}>ASENTAJAT</Link>{' '}\n      <Link color=\"primary\" href=\"/Services\" onClick={Services}>HUOLTOTYÖT</Link>{' '}\n      <BrowserRouter>\n        <div>\n          <Route path=\"/MainPage\" component={MainPage} />\n          <Route path=\"/Mechanics\" component={Mechanics} />\n          <Route path=\"/Services\" component={Services} />\n          <Route path=\"/Customers\" component={Customers} />\n        </div>\n      </BrowserRouter> */}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}